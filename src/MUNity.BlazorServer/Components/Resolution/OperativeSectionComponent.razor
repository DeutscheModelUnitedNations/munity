@using MUNity.BlazorServer.BServices
@inject BServices.VirtualCommiteeParticipationService pcService

<div class="panel panel-inverse mb-1">
	<div class="panel-heading ui-sortable-handle">
		<h4 class="panel-title">Operativer Abschnitt</h4>
		@if (Exchange.Resolution.State == EResolutionStates.Private || Exchange.Resolution.State == EResolutionStates.Public)
		{
			<small>Doppelklick auf den Absatz zum Bearbeiten</small>
		}
		else
		{
			<small>Änderungen an der Präamble sind derzeit nur dem Vorsitz möglich</small>
		}
	</div>
</div>

@foreach(var operativeParagraph in Exchange.Resolution.OperativeParagraphs)
{
	
	if (operativeParagraph.Visible && !operativeParagraph.IsVirtual)
	{
		paragraphIndex++;
		<OperativeParagraphComponent 
			Exchange=@Exchange 
			Paragraph=@operativeParagraph
			IsFirst=@(operativeParagraph == Exchange.Resolution.OperativeParagraphs.First()) 
			IsLast=@(operativeParagraph == Exchange.Resolution.OperativeParagraphs.Last())
			Index=@paragraphIndex
			CanEdit=@CanEdit
			/>
	}
}

@if (pcService.RoleId != null && Exchange.Resolution.State == EResolutionStates.Discussion)
{
	<div class="row d-flex justify-content-center mb-3 mt-2">
		<button class="btn btn-indigo btn-icon btn-lg" title="Absatz über einen Änderungsantrag hinzufügen" @onclick="() => showCreateAddAmendmentModal = true"><i class="fa fa-plus"></i></button>
	</div>
}

<AuthorizeView>
	<Authorized>
		<div class="row d-flex justify-content-center mb-3 mt-2">
			<button class="btn btn-primary btn-icon btn-lg" title="Präambelabsatz hinzufügen (Berechtigung durch Vorsitzposten)" @onclick="CreateOperativeParagraph"><i class="fa fa-plus"></i></button>
		</div>
	</Authorized>
	<NotAuthorized>
		@if (Exchange.Resolution.State == EResolutionStates.Public ||
		(Exchange.Resolution.State == EResolutionStates.Private && pcService.RoleId == Exchange.Resolution.SubmitterRole.RoleId))
		{
			<div class="row d-flex justify-content-center mb-3 mt-2">
				<button class="btn btn-success btn-icon btn-lg" title="Präambelabsatz hinzufügen" @onclick="CreateOperativeParagraph"><i class="fa fa-plus"></i></button>
			</div>
		}
	</NotAuthorized>
</AuthorizeView>

@if (showCreateAddAmendmentModal)
{
	<div class="modal-backdrop" style="opacity: 50%"></div>
	<div class="modal show " style="display: block;" aria-modal="true" role="dialog">
		<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<h4 class="modal-title">Hinzufügen eines neuen Absatz</h4>
					<button type="button" class="btn-close" @onclick="() => showCreateAddAmendmentModal = false"></button>
				</div>
				<div class="modal-body">
					<p>Die Resolution befindet sich bereits in der Debatte. Dieser Absatz wird mit einem Änderungsantrag eingereicht.
						<RadzenHtmlEditor class="mt-2" @bind-Value="@newText" style="max-height: 300px; width: 100%; margin-bottom: 1rem;">
							<RadzenHtmlEditorSeparator />
							<RadzenHtmlEditorUndo />
							<RadzenHtmlEditorRedo />
							<RadzenHtmlEditorSeparator />
							<RadzenHtmlEditorBold />
							<RadzenHtmlEditorItalic />
							<RadzenHtmlEditorUnderline />
							<RadzenHtmlEditorStrikeThrough />
							<RadzenHtmlEditorSeparator />
						</RadzenHtmlEditor>
					</p>
				</div>
				<div class="modal-footer">
					<a class="btn btn-primary" @onclick="CreateAddAmendment">Speichern</a>
					<a class="btn btn-white" @onclick="() => showCreateAddAmendmentModal = false">Schließen</a>
				</div>
			</div>
		</div>
	</div>
}


@code {
	[EditorRequired][Parameter] public ResolutionExchange Exchange { get; set; }

	[EditorRequired][Parameter] public bool CanEdit { get; set; }

	private int paragraphIndex = 0;

	private string newText;

	private bool showCreateAddAmendmentModal = false;

	private void CreateOperativeParagraph()
	{
		Exchange.AddOperativeParagraph();
	}

	protected override void OnParametersSet()
	{
		base.OnParametersSet();
		this.Exchange.ResolutionChanged += delegate { InvokeAsync(StateHasChanged); };
	}

	protected override void OnAfterRender(bool firstRender)
	{
		base.OnAfterRender(firstRender);
		paragraphIndex = 0;
	}

	private void CreateAddAmendment()
	{
		if (pcService.RoleId != null)
		{
			Exchange.AddAddAmendment(this.pcService.RoleId.Value, newText);
			this.showCreateAddAmendmentModal = false;
		}
	}

}
