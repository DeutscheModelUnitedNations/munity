<div class="card border-0 mb-1"
	@onclick="() => { if (htmlText.Length == 0 && !isEditing) { isEditing = true;}}">
	<div class="card-body">
		<div class="row">
			@if (isEditing == false)
			{
				<p @onclick="() => isEditing = true" class="card-text">@((MarkupString)htmlText)</p>
			}
			else
			{
				<button class="btn btn-default" @onclick="() => isEditing = false"><i class="fa fa-save"></i> Speichern</button>
				<RadzenHtmlEditor @bind-Value="@htmlText" style="max-height: 300px; width: 100%; margin-bottom: 1rem;">
					<RadzenHtmlEditorUndo />
					<RadzenHtmlEditorRedo />
					<RadzenHtmlEditorSeparator />
					<RadzenHtmlEditorBold />
					<RadzenHtmlEditorItalic />
					<RadzenHtmlEditorUnderline />
					<RadzenHtmlEditorStrikeThrough />
				</RadzenHtmlEditor>
			}

		</div>
		<div class="row">
			<div class="col-12">
				<span class="badge bg-danger">0 Anträge auf Steichung</span>
				<span class="badge bg-warning">0 Anträge auf Textänderung</span>
			</div>
			
		</div>

		@if (HasChild)
		{
			<div class="row">
				<OperativeParagraphComponent />
			</div>
		}

	</div>
</div>

@code {
	[Parameter] public bool HasChild { get; set; }

	private bool isEditing = false;

	private string htmlText = "1. Operativ Paragraph <br />Mit mehreren Zeilen <br />Anklicken um zu bearbeiten.";
}
