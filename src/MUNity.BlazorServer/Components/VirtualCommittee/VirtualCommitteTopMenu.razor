@using MUNity.Database.Models.Session
@inject MunityContext dbContext
@inject NavigationManager navManager
@inject BServices.ScopedSessionNotificationService notificationService
@inject ILogger<VirtualCommitteTopMenu> logger

<div id="top-menu" class="app-top-menu mt-4" style="position: absolute;">
		<!-- BEGIN menu -->
		<div class="menu">
			<div class="menu-item has-sub">
				<a href="javascript:;" class="menu-link">
					<div class="menu-icon">
						<i class="fa fa-th-large"></i>
					</div>
					<div class="menu-text">Konferenz</div>
					<div class="menu-caret"></div>
				</a>
				<div class="menu-submenu" style="box-shadow: 0px 15px 15px black; width: auto">
					<div class="menu-item">
						<div class="ms-3 menu-text text-theme">Dieses Gremien</div>
					</div>
					<div class="menu-item">
						<a href="@($"/oc/{CommitteeId}")" class="menu-link"><div class="menu-text">Startseite</div></a>
					</div>

					<div class="menu-item">
						<div class="ms-3 menu-text text-theme">Andere Gremien</div>
					</div>

					@if (!string.IsNullOrEmpty(conferenceId))
					{
						foreach(var committee in dbContext.Committees.AsNoTracking().Where(n => n.Conference.ConferenceId == conferenceId && n.CommitteeId != CommitteeId).Select(a => new {Id = a.CommitteeId, Name = a.Name}))
						{
							<div class="menu-item">
								<a href="@($"/oc/{CommitteeId}/visit/{committee.Id}")" class="menu-link"><div class="menu-text">@committee.Name</div></a>
							</div>
						}
					}

					
				</div>
			</div>
			<div class="menu-item has-sub">
				<a href="javascript:;" class="menu-link">
					<div class="menu-icon">
						<i class="fa fa-hdd"></i>
					</div>
					<div class="menu-text">Sitzungsblöcke</div>
					<div class="menu-badge ms-3">10</div>
				</a>
				<div class="menu-submenu" style="box-shadow: 0px 15px 15px black;width: auto;">
					@foreach(var session in dbContext.CommitteeSessions.Where(n => n.Committee.CommitteeId == CommitteeId).OrderBy(n => n.StartDate))
					{
						<div class="menu-item">
							<a href="@($"/oc/{CommitteeId}/session/{session.CommitteeSessionId}")" class="menu-link">
								<div class="menu-text">@session.Name <span class="badge bg-teal">@session.StartDate - @session.EndDate</span></div>
							</a>
						</div>
					}
					
				</div>
			</div>

			<div class="menu-item has-sub">
				<a href="javascript:;" class="menu-link">
					<div class="menu-icon">
						<i class="fa fa-hdd"></i>
					</div>
					<div class="menu-text">Resolutionen</div>
					<div class="menu-badge ms-3">10</div>
				</a>
				<div class="menu-submenu" style="box-shadow: 0px 15px 15px black;">
					<div class="menu-item">
						<a href="@($"/oc/{CommitteeId}/resolution/demo")" class="menu-link">
							<div class="menu-text"><i class="fa fa-plus text-theme"></i> Neu erstellen</div>
						</a>
					</div>
					<div class="menu-item">
						<a href="@($"/oc/{CommitteeId}/resolution/demo")" class="menu-link">
							<div class="menu-text">Resolution 1</div>
						</a>
					</div>
					<div class="menu-item">
						<a href="@($"/oc/{CommitteeId}/resolution/demo")" class="menu-link">
							<div class="menu-text">Resolution 2</div>
						</a>
					</div>
				</div>
			</div>

			<div class="menu-item has-sub">
				<a href="javascript:;" class="menu-link">
					<div class="menu-icon">
						<i class="fa fa-gem"></i>
					</div>
					<div class="menu-text">Abstimmungen <span class="menu-label">NEW</span></div> 
					<div class="menu-caret"></div>
				</a>
				<div class="menu-submenu" style="box-shadow: 0px 15px 15px black;">
					<AuthorizeView>
						<Authorized>
							<div class="menu-item">
								<a class="menu-link cursor-pointer" @onclick=CreateVoting>
									<div class="menu-text"><i class="fa fa-plus text-theme"></i> Neu erstellen</div>
								</a>
							</div>

							@foreach(var voting in dbContext.SessionVotings)
							{
								<div class="menu-item">
									<a class="menu-link" href="@($"/oc/{CommitteeId}/managevote/{voting.SessionVotingId}")" >
										<div class="menu-text">
											@voting.Name 
											<i class="fa @(((voting.IsActive) ? "fa-clock text-warning" : "fa-check text-success")) "></i>
										</div>
									</a>
								</div>
							}
						</Authorized>
						<NotAuthorized>
							@foreach(var voting in dbContext.SessionVotings)
							{
								<div class="menu-item">
									<a class="menu-link" href="@($"/oc/{CommitteeId}/vote/{voting.SessionVotingId}")" >
										<div class="menu-text">
											@voting.Name 
											<i class="fa @(((voting.IsActive) ? "fa-clock text-warning" : "fa-check text-success")) "></i>
										</div>
									</a>
								</div>
							}
						</NotAuthorized>
					</AuthorizeView>
					
					
				
				</div>
			</div>

			<AuthorizeView>
				<Authorized>
					<div class="menu-item has-sub">
				<a href="javascript:;" class="menu-link">
					<div class="menu-icon">
						<i class="fa fa-gem"></i>
					</div>
					<div class="menu-text">Vorsitz</div> 
					<div class="menu-caret"></div>
				</a>
				<div class="menu-submenu" style="box-shadow: 0px 15px 15px black;">
					@if (listOfSpeakersId != null)
					{
						<div class="menu-item">
							<a href="@($"/oc/{CommitteeId}/los/{listOfSpeakersId}")" class="menu-link">
								<div class="menu-text">Redeliste bearbeiten</div>
							</a>
							</div>
					}
					else
					{
						<div class="menu-item">
							<a class="menu-link">
								<div class="menu-text">Keine Redeliste</div>
							</a>
						</div>
					}

				</div>
			</div>

			<div class="menu-item ">
				<a href="bootstrap_5.html" class="menu-link">
					<div class="menu-icon-img">
						<img src="../assets/img/logo/logo-bs5.png" alt="">
					</div>
					<div class="menu-text">Statistik <span class="menu-label">NEW</span></div> 
				</a>
			</div>
			<div class="menu-item has-sub">
					<a href="javascript:;" class="menu-link">
						<div class="menu-icon">
							<i class="fa fa-align-left"></i>
						</div>
						<div class="menu-text">Platzhalter</div>
						<div class="menu-caret"></div>
					</a>
					<div class="menu-submenu" style="box-shadow: 0px 15px 15px black;">
						<div class="menu-item has-sub expand">
							<a href="javascript:;" class="menu-link">
								<div class="menu-text">Menu 1.1</div>
								<div class="menu-caret"></div>
							</a>
							<div class="menu-submenu" style="display: block;">
								<div class="menu-item has-sub expand">
									<a href="javascript:;" class="menu-link">
										<div class="menu-text">Menu 2.1</div>
										<div class="menu-caret"></div>
									</a>
									<div class="menu-submenu" style="display: block;">
										<div class="menu-item"><a href="javascript:;" class="menu-link"><div class="menu-text">Menu 3.1</div></a></div>
										<div class="menu-item"><a href="javascript:;" class="menu-link"><div class="menu-text">Menu 3.2</div></a></div>
									</div>
								</div>
								<div class="menu-item"><a href="javascript:;" class="menu-link"><div class="menu-text">Menu 2.2</div></a></div>
								<div class="menu-item"><a href="javascript:;" class="menu-link"><div class="menu-text">Menu 2.3</div></a></div>
							</div>
						</div>
						<div class="menu-item"><a href="javascript:;" class="menu-link"><div class="menu-text">Menu 1.2</div></a></div>
						<div class="menu-item"><a href="javascript:;" class="menu-link"><div class="menu-text">Menu 1.3</div></a></div>
					</div>
				</div>
				</Authorized>
			</AuthorizeView>
			

		</div>
		<!-- END menu -->
	</div>
@code {
	[Parameter] public string CommitteeId { get; set; }

	[Parameter] public string CurrentSessionId { get; set; }

	private string conferenceId;

	private string listOfSpeakersId;

	protected override void OnParametersSet()
	{
		base.OnParametersSet();
		this.conferenceId = dbContext.Committees.AsNoTracking()
		.Where(n => n.CommitteeId == CommitteeId)
		.Select(n => n.Conference.ConferenceId).FirstOrDefault();

		this.listOfSpeakersId = dbContext.Committees
			.AsNoTracking()
			.Where(n => n.CommitteeId == CommitteeId)
			.Select(n => n.ListOfSpeakers.ListOfSpeakersId)
			.FirstOrDefault();
	}

	private void CreateVoting()
	{
		if (!string.IsNullOrEmpty(CurrentSessionId))
		{
			var newVoting = new SessionVoting()
			{
				Name = "Neues Abstimmung",
				Session = dbContext.CommitteeSessions.FirstOrDefault(n => n.CommitteeSessionId == CurrentSessionId)
			};
			var presentsCheckId = dbContext.PresentChecks.FirstOrDefault(n => n.Session.CommitteeSessionId == CurrentSessionId)?.SessionPresentsId;
			if (presentsCheckId != null)
			{
				newVoting.VoteSlots = dbContext.PresentStates.Where(n => n.SessionPresents.SessionPresentsId == presentsCheckId)
				.Select(n => new SessionVotingSlot()
					{
						Choice = EVoteStates.NotVoted,
						User = n.Role,
						Voting = newVoting
					}).ToList();

				dbContext.SessionVotings.Add(newVoting);
				dbContext.SaveChanges();
				navManager.NavigateTo($"/oc/{CommitteeId}/managevote/{newVoting.SessionVotingId}");
			}
			else
			{
				logger?.LogWarning("Unable to create a new voting because there was no presents check found!");
				notificationService?.Notify("Nicht möglich", "Bevor eine Abstimmung angelegt werden kann, muss die Anwesenheit festgestellt werden.");
			}
		}
		else
		{
			logger?.LogWarning("Unable to create a new voting because there was no current Session!");
			notificationService?.Notify("Nicht möglich", "Es kann derzeit keine Abstimmung erstellt werden, es wurde keine aktueller Sitzungsblock gefunden welcher als referenz für die Anwesenheit genutzt werden kann.");
		}

	}
}
