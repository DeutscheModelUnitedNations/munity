@inject Services.ConferenceService conferenceService

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Sitze in @info.CommitteeName</h3>
            </div>
            <div class="card-body">
                <p>Diese Tabelle zeigt einen Teil der DelegationWishesen an, indem es die Sitze des Gremiums: GREMIUMNAME anzeigt.</p>
                <p><b>Rollenname</b> ist der angezeigte Name einer Rolle zum Beispiel: Abgeordnete*r Deutschlands. Es kann sich auch um den Präsidenten, Außenminister etc. handeln.</p>
                <p><b>Staat</b> gibt den Staat an, mit welchen diese Rolle identifiziert werden soll. Eine Rolle muss nicht zwangsläufig einen Staat angeben.</p>
                <p><b>Delegation</b> Die DelegationWishes ist eine Gruppe, welche sich dieser Sitz zugehörig fühlt. Eine DelegationWishes kann jeweils ein Land sein (Deutschland) oder auch eine eigene Gruppe/Schulklasse etc. abbilden. DelegationWishesen können an anderer Stelle angelegt und konfiguriert werden.</p>
                <p><b>Subtype</b> Subtypes Kategorisieren den Sitz weiter. Diese dient vorallem um zwischen Delegierten, Nichtregierungsorganisationen, Nichtstaatlichen Akteuren oder Presse zu unterscheiden. Subtypes werden von der Plattform über den eingegebenen Namen zusammengefasst, ein Subtype sollte daher einheitlich und in der Schreibweise identisch sein.</p>

                <div class="table-responsive">
                    <table class="table mb-0">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Rollenname</th>
                                <th>Staat</th>
                                <th>Delegation</th>
                                <th>Subtype</th>
                                <th>Teilnehmende</th>
                                <th>Beitritt</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (info != null)
                            {
                                @foreach (var seat in info.Seats)
                                {
                                    <ManageCommiteeSeatsTableRow Seat="seat"
                                                                 Countries="info.Countries"
                                                                 Delegations="info.Delegations" />
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card-footer">
                <button class="btn btn-primary" @onclick="() => createSeatModal?.Show()">Sitz hinzufügen</button>
            </div>
        </div>
    </div>
</div>

@if (info != null)
{
    <CreateCommitteeSeatModal CommitteeId="@CommitteeId"
                              CommitteeName="@info.CommitteeName"
                              Countries="@info.Countries"
                              Delegations="@info.Delegations"
                              @ref="createSeatModal"
                              SeatCreated="LoadData"/>

}

@code {
    [Parameter] public string CommitteeId { get; set; }

    [CascadingParameter] public Task<AuthenticationState> authStateTask { get; set; }

    private MUNity.Schema.Conference.CommitteeSeatsInfo info;

    CreateCommitteeSeatModal createSeatModal;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        await LoadData();
    }

    public async Task LoadData()
    {
        var claim = (await authStateTask)?.User;
        if (claim != null && !string.IsNullOrEmpty(CommitteeId))
        {
            this.info = await conferenceService.GetCommitteeSeatsInfo(CommitteeId, claim);
            await this.InvokeAsync(this.StateHasChanged);
        }
    }

}
