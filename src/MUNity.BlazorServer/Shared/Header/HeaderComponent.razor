@using System.Linq 

@inject NavigationManager navManager
@inject MUNity.Database.Context.MunityContext context

<div id="header" class="app-header">
    <!-- BEGIN navbar-header -->
    <div class="navbar-header">
        <a href="/" class="navbar-brand"><span class="navbar-logo"></span> <b>@title</b></a>
        <button type="button" class="navbar-mobile-toggler" data-toggle="app-sidebar-mobile">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>
    </div>
    <!-- END navbar-header -->
    <!-- BEGIN header-nav -->
    <div class="navbar-nav">
        <div class="navbar-item navbar-form">
            <form action="" method="POST" name="search">
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Suchbegriff">
                    <button type="submit" class="btn btn-search"><i class="oi oi-magnifying-glass"></i></button>
                </div>
            </form>
        </div>
        <AuthorizeView>
            <Authorized>
                <HeaderUserSection />
            </Authorized>
            <NotAuthorized>
                <a href="/Identity/Account/Login" class="btn">Login</a>
                <a href="/Identity/Account/Register" class="btn ms-15px me-15px">Registrieren</a>
            </NotAuthorized>
        </AuthorizeView>
    </div>
    <!-- END header-nav -->
</div>

@code {
    private string title { get; set; } = "MUNity";

    protected override Task OnInitializedAsync()
    {
        UpdateTitle();
        navManager.LocationChanged += delegate { UpdateTitle(); };
        return base.OnInitializedAsync();
    }

    private void UpdateTitle()
    {
        if (navManager.Uri.Contains("/web/conference/"))
        {
            title = "KONFERENZNAME";
            var conferenceKeywordIndex = navManager.Uri.Split("/").ToList().IndexOf("conference");
            var conferenceId = navManager.Uri.Split("/")[conferenceKeywordIndex + 1];
            Console.WriteLine(conferenceId);
            this.title = context.Conferences.AsNoTracking().Where(n => n.ConferenceId == conferenceId).Select(a => a.ConferenceShort).FirstOrDefault();


        }
    }

}
