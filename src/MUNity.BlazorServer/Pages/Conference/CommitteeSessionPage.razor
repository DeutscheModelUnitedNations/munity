@page "/committee/session/{Id}"
@using MUNity.Database.Models.Session

@inject MunityContext dbContext

<AuthorizeView>
    <Authorized>
        <h1>@session.Name</h1>
        <h2>von @session?.StartDate bis @session?.EndDate</h2>
        <h3>Tagesordnungspunkt</h3>
        @if (session.CurrentAgendaItem != null)
        {
            <h5>@session?.CurrentAgendaItem?.Name</h5>

        }
        else {
            <button class="btn btn-default" @onclick=CreateAgendaItem>Kein Tagesordnungspunkt - jetzt erstellen</button>
        }
        
    </Authorized>
    <NotAuthorized>
        <p>You need to be logged in for this page!</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter] public string Id { get; set; }

    [CascadingParameter] public Task<AuthenticationState> AuthStateTask { get; set; }

    private CommitteeSession session;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        this.session = dbContext.CommitteeSessions.Include(n => n.CurrentAgendaItem).FirstOrDefault(n => n.CommitteeSessionId == Id);
    }

    private void CreateAgendaItem()
    {
        var agendaItem = new AgendaItem()
        {
            Name = "Neuer Tagesordnungspunkt",
            Status = EAgendaItemStatuses.Active
        };
        this.session.CurrentAgendaItem = agendaItem;
        dbContext.AgendaItems.Add(agendaItem);
        dbContext.SaveChanges();
    }
}
