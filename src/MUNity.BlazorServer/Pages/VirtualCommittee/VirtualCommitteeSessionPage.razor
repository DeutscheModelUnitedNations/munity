@page "/oc/{CommitteeId}"
@page "/oc/{CommitteeId}/session/{SessionId}"
@page "/oc/{CommitteeId}/resolution/{ResolutionId}"
@page "/oc/{CommitteeId}/visit/{VisitCommitteeId}"
@page "/oc/{CommitteeId}/los/{ManageListOfSpeakersId}"
@page "/oc/{CommitteeId}/managevote/{ManageVotingId}"
@page "/oc/{CommitteeId}/vote/{VoteId}"

@using MUNity.BlazorServer.BServices
@using MUNity.Database.Models.Conference
@using MUNity.Database.Models.Conference.Roles

@layout Shared.MobileGameLayout

@inject MunityContext dbContext
@inject Blazored.LocalStorage.ILocalStorageService localStorageService
@inject BServices.VirtualCommiteeParticipationService virtualCommitteeParticipation
@inject BServices.VirtualCommitteeExchangeService vcExchangeService
@inject Services.UserConferenceAuthService conferenceAuthService
@inject Services.ListOfSpeakersService listOfSpeakersService
@inject ILogger<VirtualCommitteeSessionPage> logger

@if (true)
{
    <MUNity.BlazorServer.Components.VirtualCommittee.VirtualCommitteeBootstrap CommitteeId=@CommitteeId>
        
            @if (!string.IsNullOrEmpty(SessionId))
            {
                <h1 class="page-header">@(dbContext.CommitteeSessions.FirstOrDefault(n => n.CommitteeSessionId == SessionId)?.Name)</h1>
                <AuthorizeView>
                    <Authorized>
                        <MUNity.BlazorServer.Components.VirtualCommittee.PresentsCheckComponent SessionId=@SessionId />
                    </Authorized>
                </AuthorizeView>
                
                <MUNity.BlazorServer.Components.VirtualCommittee.PropsitionsComponent SessionId=@SessionId />
            }
            else if (!string.IsNullOrEmpty(ResolutionId))
            {
                <MUNity.BlazorServer.Components.Resolution.ResolutionEditorComponent ResolutionId=@ResolutionId />
            }
            else if (!string.IsNullOrEmpty(VisitCommitteeId))
            {
                <MUNity.BlazorServer.Components.VirtualCommittee.VisitCommitteeComponent />
            }
            else if (!string.IsNullOrEmpty(ManageListOfSpeakersId))
            {
                <MUNity.BlazorServer.Components.ListOfSpeakers.LoSManagerComponent ViewModel=@listOfSpeakersService.GetViewModel(ManageListOfSpeakersId) />
            }
            else if (!string.IsNullOrEmpty(ManageVotingId))
            {
                <MUNity.BlazorServer.Components.VirtualCommittee.ManageVotingComponent VotingId=@ManageVotingId />
                <MUNity.BlazorServer.Components.VirtualCommittee.VoteComponent VoteId=@ManageVotingId />
            }
            else if (!string.IsNullOrEmpty(VoteId))
            {
                <MUNity.BlazorServer.Components.VirtualCommittee.VoteComponent VoteId=@VoteId />
            }
            else {
                <h1 class="page-header">Willkommen @(virtualCommitteeParticipation.RoleName)</h1>
                <div class="panel panel-inverse">
				    <div class="panel-heading">
					    <h4 class="panel-title">Information</h4>
				    </div>
				    <div class="panel-body">
					    Bei dieser Seite handelt es sich um eine technische Demo für MUNity. Diese Seite zeigt lediglich den Funktionsumfang von MUNity.
                        Vorgenommene Änderungen werden nicht gespeichert.
				    </div>
			    </div>

                <div class="row">
                    <div class="col-lg-6 col-sm-12">
                        <div class="panel panel-inverse">
                            <div class="panel-heading">
					    <h4 class="panel-title">Information</h4>
				    </div>
				    <div class="panel-body">
					    <MUNity.BlazorServer.Components.VirtualCommittee.ProcedureComponent />
				    </div>
                        </div>
                    </div>
                </div>
            }
    </MUNity.BlazorServer.Components.VirtualCommittee.VirtualCommitteeBootstrap>

    <MUNity.BlazorServer.Components.VirtualCommittee.VCNotificationsComponent />
}
else
{
    <p>Zugriff verweigert!</p>
    
}



<style>
    @@media (max-width: 993px)
    {
        .hidden-md
        {
            display: none;
            visibility: collapse;
        }
        
    }
</style>


@code {
    [Parameter] public string CommitteeId { get; set; }

    [Parameter] public string SessionId { get; set; }

    [Parameter] public string ResolutionId { get; set; }

    [Parameter] public string VisitCommitteeId { get; set; }

    [Parameter] public string ManageListOfSpeakersId { get; set; }

    [Parameter] public string ManageVotingId { get; set; }

    [Parameter] public string VoteId { get; set; }

    [CascadingParameter] public Task<AuthenticationState> AuthStateTask { get; set; }

    
    

}
