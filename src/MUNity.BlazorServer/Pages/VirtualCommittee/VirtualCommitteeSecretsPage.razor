@page "/oc/{CommitteeId}/secrets"

@inject MunityContext dbContext

@inject NavigationManager navManager

@layout MobileGameLayout

<MUNity.BlazorServer.Components.VirtualCommittee.VirtualCommitteeBootstrap CommitteeId=@CommitteeId>
    <AuthorizeView>
        <Authorized>
            <h1>Gremium Zugriffe</h1>
            <p>Diese Liste verwaltet die Secrets mit welchen Teilnehmende sich in ihre Rolle einloggen können. Diese Codes können hier geändert werden.</p>
            @if (roles != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Rollenname</th>
                            <th>Land</th>
                            <th>Zugriff</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var role in roles)
                        {
                            <tr>
                                <td>@role.RoleName</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(role.Iso))
                                    {
                                        <img src="@($"/img/flags/small/{role.Iso}.png")" /> @role.CountryName
                                    }
                                    else
                                    {
                                        <img src="/img/flags/small/un.png" /> <span>Kein Land</span>
                                    }
                                </td>
                                <td>
                                    <div class="input-group">
                                        <input @bind=role.Secret class="form-control" />
                                        <button class="btn btn-primary" @onclick="() => role.Secret = MUNity.Util.IdGenerator.RandomString(32)"><i class="fa fa-rotate-180"></i> Neu generieren</button>
                                    </div>
                                    <p>Beitrittslink: @(navManager.BaseUri)oc/join/@(role.Secret)</p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <p class="text-danger"><b>Achtung</b> Änderungen an den Secrets führen dazu, dass zuvor rausgegebene Links danach nicht mehr funktionieren. Die Funktion ist vorhanden um einen Link ändern zu können, falls dieser in die falschen Hände gekommen ist.</p>
                <button class="btn btn-warning" @onclick="() => dbContext.SaveChanges()">Ich bin mir sicher - Änderung speichern</button>
            }
            else
            {
                <p>Liste wird geladen.</p>
            }

        </Authorized>
        <NotAuthorized>
            <p>Zugriff verweigert!</p>
        </NotAuthorized>
    </AuthorizeView>
</MUNity.BlazorServer.Components.VirtualCommittee.VirtualCommitteeBootstrap>

@code {
    [Parameter] public string CommitteeId { get; set; }

    private List<RoleInfo> roles = null;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        roles = dbContext.Delegates
        .Where(n => n.Committee.CommitteeId == CommitteeId)
        .Select(n => new RoleInfo()
        {
            RoleId = n.RoleId,
            RoleName = n.RoleName,
            Iso = n.DelegateCountry.Iso,
            CountryName = n.DelegateCountry.Name,
            Secret = n.RoleSecret
        }).ToList();
    }

    private class RoleInfo
    {
        public int RoleId { get; set; }

        public string RoleName { get; set; }

        public string Iso { get; set; }

        public string CountryName { get; set; }

        public string Secret { get; set; }
    }
}
