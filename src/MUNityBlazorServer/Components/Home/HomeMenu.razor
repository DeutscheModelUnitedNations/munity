@inject NavigationManager navManager

<!-- BEGIN header -->
<div class="header @((useDefaultHeader) ? "header-default" : "header-float") ">
	<div class="container d-flex">
		<div class="header-logo">
			<a href="/" class="logo-link">
				<span class="logo"></span><b>MUNity</b> <small>FREE DEMO</small>
			</a>
		</div>
		<div class="header-nav">
			<div class="container">
				@*<div class="header-nav-item">
					<a href="about.html" class="header-nav-link">About</a>
				</div>*@
				<div class="header-nav-item">
					<a href="/tools" class="header-nav-link">Tools</a>
				</div>
				<div class="header-nav-item">
					<a href="newsroom.html" class="header-nav-link">Updates</a>
				</div>
				<div class="header-nav-item">
					<a href="careers.html" class="header-nav-link">Conferences</a>
				</div>
				<div class="header-nav-item">
					<a href="contact_us.html" class="header-nav-link">Contact Us</a>
				</div>
			</div>
		</div>
		<div class="header-btn">
			<a href="/Identity/Account/Register" class="btn btn-primary fw-bold rounded-pill">Get started <i class="fa fa-arrow-right ms-1 opacity-5"></i></a>
		</div>
		<button class="header-mobile-nav-toggler" type="button" data-toggle="header-mobile-nav">
			<span class="header-mobile-nav-toggler-icon"></span>
		</button>
	</div>
</div>
		<!-- END header -->
@code {
    private bool useDefaultHeader = true;

    protected override void OnInitialized()
    {
        useDefaultHeader = navManager.Uri != navManager.BaseUri;
        navManager.LocationChanged += LocationChanged;
    }

    private void LocationChanged(object sender, LocationChangedEventArgs args)
    {
        useDefaultHeader = navManager.Uri != navManager.BaseUri;
		this.InvokeAsync(StateHasChanged);
    }
}
