@inject Services.SimulationService simulationService;
@inject Services.PresentsService presentsService;
<!-- begin card -->
<div class="card border-0 mb-3 bg-dark text-white">
    <!-- begin card-body -->
    <div class="card-body">
        <!-- begin title -->
        <div class="mb-3 text-grey">
            <b>Anwesenheit und Abstimmung</b>
        </div>
        <!-- end title -->
        <!-- begin row -->

        @if (lastPresents != null)
        {
            <div class="row align-items-center p-b-1">
                <!-- begin col-4 -->
                <div class="col-4">
                    <div class="height-100 d-flex align-items-center justify-content-center">
                        <img src="/img/flags/medium/un.png" class="mw-100 mh-100">
                    </div>
                </div>
                <!-- end col-4 -->
                <!-- begin col-8 -->
                <div class="col-8">
                    <div class="m-b-2 text-truncate">Anwesenheit</div>
                    <div class="m-b-2  text-grey f-s-11">Festgestellt: @lastPresents.CreatedTime.ToString("dd.MM.yyyy HH:mm")</div>
                    <div class="d-flex align-items-center m-b-2">
                        <div class="flex-grow-1">
                            <div class="progress progress-xs rounded-corner bg-white-transparent-1">
                                <div class="progress-bar progress-bar-striped bg-indigo" data-animation="width" data-value="@(lastPresentsPercentage)%" style="width: @(lastPresentsPercentage)%;"></div>
                            </div>
                        </div>
                        @if (lastPresents.CheckedUsers.Count > 0)
                        {
                    <div class="ml-2 f-s-11 width-30 text-center">@(lastPresentsPercentage)%</div>
                        }

                    </div>
                    <div class="text-grey f-s-11 m-b-15 text-truncate">
                        @lastPresents.CheckedUsers.Count(n => n.State == Models.Simulation.PresentsState.PresentsStates.Present)/@lastPresents.CheckedUsers.Count anwesend
                    </div>
                    <a href="#" class="btn btn-xs btn-indigo f-s-10 pl-2 pr-2">Anwesenheitsverlauf</a>
                </div>
                <!-- end col-8 -->
            </div>
        }


        <!-- end row -->
        <hr class=" bg-white-transparent-2 m-t-20 m-b-20">
        <!-- begin row -->
        <div class="row align-items-center">
            <!-- begin col-4 -->
            <div class="col-4">
                <div class="height-100 d-flex align-items-center justify-content-center">
                    <img src="/img/flags/medium/un.png" class="mw-100 mh-100">
                </div>
            </div>
            <!-- end col-4 -->
            <!-- begin col-8 -->
            <div class="col-8">
                <div class="m-b-2 text-truncate">Abstimmungen (TODO)</div>
                <div class="m-b-2  text-grey f-s-11">Abstimmung über lustigen Stuff.</div>
                <div class="d-flex align-items-center m-b-2">
                    <div class="flex-grow-1">
                        <div class="progress progress-xs rounded-corner bg-white-transparent-1">
                            <div class="progress-bar bg-danger" data-animation="width" data-value="60%" style="width: 60%;"></div>
                            <div class="progress-bar bg-success" data-animation="width" data-value="20%" style="width: 20%;"></div>
                            <div class="progress-bar bg-primary" data-animation="width" data-value="20%" style="width: 20%;"></div>
                        </div>
                    </div>
                    <div class="ml-2 f-s-11 width-30 text-center"><span data-animation="number" data-value="60">60</span>%</div>
                </div>
                <div class="text-grey f-s-11 m-b-15 text-truncate">
                    <span class="text-danger">6 dagegen </span>, <span class="text-success">2 dafür</span>, <soan class="text-primary">2 Enthaltungen</soan>
                </div>
                <a href="#" class="btn btn-xs btn-warning f-s-10 pl-2 pr-2">Abstimmungen anzeigen</a>
            </div>
            <!-- end col-8 -->
        </div>
        <!-- end row -->
    </div>
    <!-- end card-body -->
</div>
<!-- end card -->
@code {
    [Parameter]
    public ViewModel.SimulationViewModel ViewModel { get; set; }

    private Models.Simulation.SimulationPresents lastPresents;

    private int _lastPresentsPercentage = 0;
    private int lastPresentsPercentage
    {
        get
        {
            if (lastPresents == null)
                return 0;

            if (_lastPresentsPercentage == 0)
                _lastPresentsPercentage = lastPresents.CheckedUsers.Count(n => n.State == Models.Simulation.PresentsState.PresentsStates.Present) * 100 / lastPresents.CheckedUsers.Count;

            return _lastPresentsPercentage;
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (ViewModel != null)
        {
            lastPresents = presentsService.GetLastPresentCheckOfSimulation(ViewModel.SimulationId);
        }

    }
}
