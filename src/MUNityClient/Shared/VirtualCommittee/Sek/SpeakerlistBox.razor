@if (ViewModel != null)
{
    <h4>Aktuelle(r) RednerIn</h4>
    <h5>@ViewModel.SourceList?.CurrentSpeaker?.Name</h5>
    @if (ViewModel.SourceList.Speakers.Any())
    {
        <p>@string.Join(", ", ViewModel.SourceList.Speakers.Select(n => n.Name))</p>
    }
    else
    {
        <p>Niemand auf der Warteliste</p>
    }

    <h4>Aktuelle FuK</h4>
    <h5>@ViewModel.SourceList?.CurrentQuestion?.Name</h5>
    @if (ViewModel.SourceList.Questions.Any())
    {
        <p>@string.Join(", ", ViewModel.SourceList.Questions.Select(n => n.Name))</p>
    }
    else
    {
        <p>Niemand auf der Warteliste</p>
    }
}

@code {
    [Parameter]
    public ViewModels.ListOfSpeakerViewModel ViewModel { get; set; }

    protected override void OnInitialized()
    {
        if (ViewModel != null)
        {
            ViewModel.Handler.AnswerTimerStarted += delegate { this.StateHasChanged(); };
            ViewModel.Handler.ClearQuestion += delegate { this.StateHasChanged(); };
            ViewModel.Handler.ClearSpeaker += delegate { this.StateHasChanged(); };
            ViewModel.Handler.NextQuestionPushed += delegate { this.StateHasChanged(); };
            ViewModel.Handler.NextSpeakerPushed += delegate { this.StateHasChanged(); };
            ViewModel.Handler.Paused += delegate { this.StateHasChanged(); };
            ViewModel.Handler.QuestionSecondsAdded += delegate { this.StateHasChanged(); };
            ViewModel.Handler.QuestionsStateChanged += delegate { this.StateHasChanged(); };
            ViewModel.Handler.QuestionTimerStarted += delegate { this.StateHasChanged(); };
            ViewModel.Handler.SettingsChanged += delegate { this.StateHasChanged(); };
            ViewModel.Handler.SpeakerAdded += delegate { this.StateHasChanged(); };
            ViewModel.Handler.SpeakerRemoved += delegate { this.StateHasChanged(); };
            ViewModel.Handler.SpeakerSecondsAdded += delegate { this.StateHasChanged(); };
            ViewModel.Handler.SpeakerStateChanged += delegate { this.StateHasChanged(); };
            ViewModel.Handler.SpeakerTimerStarted += delegate { this.StateHasChanged(); };
            ViewModel.Handler.TimerStopped += delegate { this.StateHasChanged(); };
        }
        base.OnInitialized();
    }
}
