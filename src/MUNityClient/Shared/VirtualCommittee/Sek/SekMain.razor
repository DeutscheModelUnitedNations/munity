@page "/sim/sek/{masterToken}"
@inject Services.SimulationService simulationService;


@if (_simulations == null && !hasErrored)
{
    <p>Wird geladen</p>
}
else if (_simulations != null && !hasErrored)
{
    <div class="row">
        Geladene Simulationen: @_simulations.Count
    </div>
    @foreach(var sim in _simulations)
    {
        <SekSimulation SimulationId="sim.SimulationId" MasterToken="@MasterToken" />
    }
}
else if (_simulations == null && hasErrored)
{
    <p>Es gab einen Fehler, bitte versuche neu zu laden.</p>
}

@code {
    [Parameter]
    public string MasterToken { get; set; }

    private bool hasErrored = false;

    private ICollection<MUNity.Schema.Simulation.SimulationListItemDto> _simulations
    {
        get;
        set;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _simulations = await simulationService.GetSimulationList();
        }
        catch
        {
            hasErrored = true;
        }
        await base.OnInitializedAsync();
    }
}
