@if (ViewModel != null && FormModel != null)
{
<MUNityClient.Shared.Bootstrap.Modal Title="Neuer Tagesordnungspunkt" @ref="_myModal" ShowSubmitButton="false">
    @if (State == FormStates.Start)
    {
        <EditForm Model="@this.FormModel" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>Name</label>
                <InputText @bind-Value="@this.FormModel.Name" class="form-control" />
            </div>
            <div class="form-group">
                <label>Beschreibung</label>
                <InputTextArea @bind-Value="@this.FormModel.Description" class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="Tagesordnungspunkt erstellen" />
            </div>
        </EditForm>
    }
    else if (State == FormStates.Success)
    {
        <div class="alert alert-success">Tagesordnungspunkt angelegt!</div>
    }
    else if (State == FormStates.ClientError || State == FormStates.ServerError)
    {
        <div class="alert alert-danger">Fehler @Message</div>
    }
</MUNityClient.Shared.Bootstrap.Modal>

}
else
{
    <p>An das Steuerelement wurde kein ViewModel übergeben.</p>
}

@code {
    [Parameter]
    public ViewModels.SimulationViewModel ViewModel { get; set; }

    public bool IsVisible {
        get => _myModal.IsOpen;
        set
        {
            if (value)
                _myModal.Open();
            else
                _myModal.Close();
        }
    }

    private MUNityClient.Shared.Bootstrap.Modal _myModal;

    public MUNity.Schema.Simulation.CreateAgendaItemDto FormModel { get; set; } = new MUNity.Schema.Simulation.CreateAgendaItemDto()
    {
        Token = "test"
    };

    private enum FormStates
    {
        Start,
        ClientError,
        ServerError,
        Success
    }

    private FormStates State { get; set; } = FormStates.Start;

    private string Message { get; set; } = "";

    public async Task HandleSubmit()
    {
        var result = await ViewModel.CreateAgendaItem(this.FormModel);
        if (result == null)
        {
            State = FormStates.ClientError;
            return;
        }
        else
        {
            if (result.IsSuccessStatusCode)
            {
                State = FormStates.Success;
                _myModal.Close();
                return;
            }
            else
            {
                State = FormStates.ServerError;
                Message = result.ReasonPhrase;
            }
        }
    }
}
