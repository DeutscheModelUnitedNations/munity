<MUNityClient.Shared.Bootstrap.Modal Title="Neuer Antrag" @ref="_modalRef" ShowSubmitButton="false">
    @if (ViewModel != null)
    {
    <div class="row">
        <div class="col-12">
            <div class="btn-group w-100" role="group">
                @if (!Categories.Any())
                {
                    <p>Es sind keine Antragsarten hinterlegt!</p>
                }
                else
                {
                    foreach (var category in Categories)
                    {
                        <button class="btn @((SelectedCategory == category) ? "btn-primary" : "btn-outline-primary")"
                                @onclick="() => SelectedCategory = category">
                            @category
                        </button>
                    }
                }
            </div>
        </div>
        <div class="col-12">
            <div class="list-group scroll-list">
                @foreach (var petitionType in ViewModel.PetitionTypes.Where(n => n.Category == SelectedCategory))
                {
                    <a class="list-group-item" @onclick="() => MakePetition(petitionType)">@petitionType.Name</a>
                }
            </div>

        </div>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="col-12">
                <p class="text-danger">@errorMessage</p>
            </div>
        }

    </div>
    }
    else
    {
        <p>Es wurde kein ViewModel übergeben. Versuche die Seite neu zu laden und probiere es erneut. Hilft das nicht bitte einen Administrator informieren.</p>
    }
</MUNityClient.Shared.Bootstrap.Modal>

<style>
    .scroll-list {
        max-height: 200px;
        overflow-y: scroll;
    }
</style>

@code {

    [Parameter]
    public MUNityClient.ViewModels.SimulationViewModel ViewModel { get; set; }

    [Parameter]
    public bool IsVisible {
        get => _modalRef.IsOpen;
        set
        {
            if (_modalRef == null) return;
            if (value)
                _modalRef.Open();
            else
                _modalRef.Close();
        }
    }

    private string errorMessage = "";

    private MUNityClient.Shared.Bootstrap.Modal _modalRef;

    public IEnumerable<string> Categories => ViewModel.MyPetitionTypes?.Select(n => n.Category)?.Distinct() ?? new List<string>();

    public string SelectedCategory { get; set; }

    private async Task MakePetition(MUNity.Schema.Simulation.PetitionTypeSimulationDto type)
    {
        if (this.ViewModel.SelectedAgendaItem == null)
        {
            Console.WriteLine("No Agenda Item set");
            return;
        }
        var result = await this.ViewModel.MakePetition(type, ViewModel.SelectedAgendaItem.AgendaItemId);
        if (result.IsSuccessStatusCode)
            this.IsVisible = false;
        else
            this.errorMessage = "Fehler beim Erstellen des Antrags.";
    }
}
