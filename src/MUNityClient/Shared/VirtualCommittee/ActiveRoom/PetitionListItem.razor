@if (this.ViewModel?.MySlot != null && Petition != null && PetitionType != null)
{
<div class="list-group-item list-group-item-action">
    <div class="d-flex w-100 justify-content-between">
        <h5 class="mb-1">@PetitionType.Name</h5>
        <small class="text-muted">@Petition.PetitionDate</small>
    </div>
    <div class="mb-0">
        <p>@SubmitterRoleName (@SubmitterName)</p>
    </div>
    @if (this.ViewModel.IsChair)
    {
        <div class="mb-1">
            <a class="badge badge-success">Antrag als aktiv setzen</a>
            <a class="badge badge-danger" @onclick="() => Delete()">Antrag löschen</a>
        </div>
    }

    @if (this.ViewModel.MySlot.SimulationUserId == Petition.PetitionUserId)
    {
        <div class="mb-1">
            <a class="badge badge-danger" @onclick="() => Delete()">Antrag zurückziehen</a>
        </div>
    }
</div>
}
else
{
    <p>ViewModel-Fehler</p>
}


@code {
    [Parameter]
    public MUNityClient.ViewModels.SimulationViewModel ViewModel { get; set; }

    [Parameter]
    public MUNity.Schema.Simulation.PetitionDto Petition { get; set; }

    private string SubmitterName
    {
        get
        {
            if (this.ViewModel == null || this.Petition == null) return "";
            var user = ViewModel.Simulation.Users.FirstOrDefault(n => n.SimulationUserId == Petition.PetitionUserId);
            if (user != null)
                return user.DisplayName;
            return "";
        }
    }

    private string SubmitterRoleName
    {
        get
        {
            if (this.ViewModel == null || this.Petition == null) return "";
            return ViewModel.Slots.FirstOrDefault(n => n.SimulationUserId == Petition.PetitionUserId)?.RoleName ?? "";
        }
    }

    private MUNity.Schema.Simulation.PetitionTypeSimulationDto PetitionType
    {
        get
        {
            if (this.Petition == null) return null;
            return ViewModel?.PetitionTypes?.FirstOrDefault(n => n.PetitionTypeId == Petition.PetitionTypeId);
        }
    }

    private void Delete()
    {
        this.ViewModel.DeletePetition(this.Petition);
    }
}
