@inject MUNityClient.Services.SimulationService simulationService

@if (_presets != null && _presets.Any() && ViewModel.MyAuth.CanCreateRole)
{
    <div class="form-group">
        <label>Vorlage</label>
        <select @bind="SelectedPresetId" class="form-control">
            <option value="null">-</option>
            @foreach (var preset in _presets)
            {
                <option value="@preset.Id">@preset.Name</option>
            }
        </select>
        @if (SelectedPreset != null)
        {
            <small class="text-danger">Achtung die Vorlage überschreibt einen Großteil der Einstellungen</small>
            <br />
            <small>Staaten: </small>
            <small>@string.Join(", ", SelectedPreset.Roles.Select(n => n.Name))</small>
        }
    </div>
    @if (SelectedPreset != null)
    {
        <div class="form-group">
            <button class="btn btn-block btn-primary" @onclick="() => ActivatePreset()">Vorlage Anwenden</button>
        </div>
    }
}

@code {
    [Parameter]
    public MUNityClient.ViewModels.SimulationViewModel ViewModel { get; set; } = null;

    private IEnumerable<MUNity.Schema.Simulation.SimulationRolesPreset> _presets { get; set; }

    private MUNity.Schema.Simulation.SimulationRolesPreset SelectedPreset { get; set; }

    private string SelectedPresetId { get => SelectedPreset?.Id ?? ""; set => SelectedPreset = _presets.FirstOrDefault(n => n.Id == value); }

    private async Task ActivatePreset()
    {
        if (ViewModel.Simulation != null)
        {
            await this.simulationService.ApplyPreset(ViewModel.Simulation.SimulationId, SelectedPresetId);
            await this.simulationService.SecureGetRoles(ViewModel);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (this.ViewModel != null)
        {
            this._presets = await this.simulationService.GetPresets();
        }
    }
}
