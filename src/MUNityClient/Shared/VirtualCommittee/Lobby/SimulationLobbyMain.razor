@using System.Linq;

@inject MUNityClient.Services.SimulationService simulationService;
@inject NavigationManager navigationManager;
@* Dies ist eine Teilnehmendenansicht an dieser Stelle werden den Nutzern Rollen zugewiesen bzw. können sich diese ihre Rollen auswählen. *@
@if (ViewModel?.Simulation != null)
{
    @if (ViewModel.MyAuth != null && ViewModel.MyAuth.CanCreateRole || ViewModel.MyRole != null &&
       ViewModel.MyRole.RoleType == MUNity.Schema.Simulation.RoleTypes.Chairman)
    {
        <div class="row">
            <div class="col-12">
                <div class="card card-header">
                    <div class="btn-group">
                        <button class="btn @((this.CurrentView == Views.Users) ? "btn-primary" : "btn-outline-primary")"
                                @onclick="() => this.CurrentView = Views.Users">
                            Teilnehmende
                        </button>
                        <button class="btn @((this.CurrentView == Views.Roles) ? "btn-primary" : "btn-outline-primary")"
                                @onclick="() => this.CurrentView = Views.Roles">
                            Rollen
                        </button>
                        <button class="btn @((this.CurrentView == Views.Petitions) ? "btn-primary" : "btn-outline-primary")"
                                @onclick="() => this.CurrentView = Views.Petitions">
                            Anträge
                        </button>
                        <button class="btn btn-secondary" @onclick="() => this.ViewModel.StartSimulation()">Simulation beginnen</button>
                    </div>
                </div>

            </div>
        </div>
    }


    <div class="row">
        @if (this.CurrentView == Views.Users)
        {
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <a href="/sim/home" class="btn btn-danger btn-sm">Raum verlassen</a> @ViewModel.Simulation.Name
                    </div>
                    <div class="card-body p-0">
                        @if (ViewModel.MyAuth.CanCreateRole)
                        {
                            <AdminUserList ViewModel="@ViewModel"></AdminUserList>
                        }
                        else
                        {
                            <DefaultUserList ViewModel="@ViewModel"></DefaultUserList>
                        }
                    </div>
                    @*
                            Rollenerstellung vorerst deaktiviert. Arbeite halt mit den Presets...
                        <div class="card-footer">
                            @if (Auth != null && Auth.CanCreateRole)
                            {
                                <button class="btn btn-block btn-success">Rolle hinzufügen</button>
                            }
                        </div>
                    *@
                </div>
            </div>

        }
        else if (this.CurrentView == Views.Roles)
        {
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <SelectRolePreset ViewModel="@this.ViewModel" />
                        <SimulationRoleTable Roles="this.ViewModel.Simulation.Roles" />
                        <div class="row">
                            <div class="col-4">
                                <input class="form-control" />
                            </div>
                            <div class="col-2">
                                <input class="form-control" />
                            </div>
                            <div class="col-4">
                                <select class="form-control">
                                    <option>Vorsitzende*r</option>
                                    <option>Delegierte*r</option>
                                    <option>Nichtstaatliche*r Akteur*in</option>
                                    <option>Zuschauer*in</option>
                                </select>
                            </div>
                            <div class="col-2">
                                <button class="btn btn-success btn-block">+</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else if (this.CurrentView == Views.Petitions)
        {
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="form-group">
                            <label>Antragsvorlage anwenden</label>
                            @if (PetitionTemplates != null)
                            {

                                <select @bind="SelectedPetitionTemplate" class="form-control">
                                    @foreach (var a in PetitionTemplates)
                                    {
                                        <option value="@a">@a</option>
                                    }
                                </select>
                            }
                            else
                            {
                                <small>Vorlagen werden geladen</small>
                            }


                        </div>
                        <div class="form-group">
                            @if (!string.IsNullOrEmpty(SelectedPetitionTemplate))
                            {
                                <button class="btn btn-block btn-primary" @onclick="() => ApplyPetitionPreset()">Anwenden</button>
                            }
                        </div>
                        @if(SubmitFormSuccess)
                        {
                            <div class="alert alert-success">Änderung übernommen</div>
                        }
                    </div>
                </div>
            </div>
        
            @if (this.ViewModel?.PetitionTypes != null)
            {
                <div class="col col-12">
                    <PetitionTypeTable PetitionTypes="this.ViewModel.PetitionTypes" />
                </div>
            }
            else
            {
                <p>Anträge werden geladen</p>
            }
        }

    </div>

}
else
{
    <MUNityClient.Shared.Bootstrap.Spinner DisplayText="Lobby wird geladen" />
}