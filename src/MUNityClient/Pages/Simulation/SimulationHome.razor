@*  
    SimulationHome beschreibt die Ansicht in welcher existierende Räume gelistet werden und
    der Benutzer diesen Beitreten kann.

*@

@page "/sim/home"

@inject Services.SimulationService simulationService;
@inject NavigationManager navigation;

@inject IJSRuntime JSRuntime

@if (_connectionState == ConnectionStates.Connected)
{
    @* Erstellen *@
    <div class="row col-12 m-0 py-0 px-4">
        <div class="col-lg-4 col-md-12 col-xs-12">
            <div class="card">
                <div class="card-body">
                    <MUNityClient.Shared.VirtualCommittee.CreateVirtualCommittee></MUNityClient.Shared.VirtualCommittee.CreateVirtualCommittee>
                </div>
            </div>
        </div>
        <div class="col-lg-8 col-md-12 col-xs-12">
            <div class="card">
                <div class="card-header">
                    Simulationen
                </div>
                <div class="card-body">
                    @if (_simulations != null)
                    {
                        if (_simulations.Any())
                        {
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Status</th>
                                        <th class="text-center">Beitreten</th>
                                        @* <th></th> *@
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var simulation in this._simulations)
                                    {
                                    <tr>
                                        <td>@simulation.Name</td>

                                        @if (simulation.Phase == MUNity.Schema.Simulation.GamePhases.Lobby)
                                        {
                                            <td>Vorbereitung</td>
                                        }
                                        else if (simulation.Phase == MUNity.Schema.Simulation.GamePhases.Online)
                                        {
                                            <td class="text-success">Aktiv</td>
                                        }
                                        else if (simulation.Phase == MUNity.Schema.Simulation.GamePhases.Offline)
                                        {
                                            <td>Offline</td>
                                        }
                                        @if (_tokens != null && _tokens.Any(n => n.SimulationId == simulation.SimulationId))
                                        {
                                            <td class="text-center">
                                                <i type="button" class="fas fa-2x mr-3 fa-sign-in-alt text-success" title="Simulation beitreten" @onclick="() => EnterSimulation(simulation.SimulationId)"></i>
                                                <i type="button" class="fas fa-2x fa-sign-out-alt text-danger" title="Zugangsdaten löschen und Simulation verlassen" @onclick="() => DeleteToken(simulation.SimulationId)"></i>
                                            </td>
                                        }
                                        else
                                        {
                                            <td class="text-center"><i type="button" class="fas fa-2x mr-3 fa-sign-in-alt text-success" title="Simulation beitreten" @onclick="() => EnterSimulation(simulation.SimulationId)"></i></td>
                                        }

                                        @* <td class="text-right"><i type="button" class="fas fa-lg fa-tools" title="Beitritt mit dem Admin Passwort"></i></td> *@
                                    </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p>Keine Simulationen gefunden :(</p>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}
else if (_connectionState == ConnectionStates.Connecting)
{
    <MUNityClient.Shared.Bootstrap.Spinner DisplayText="Simulationen werden geladen" />
}
else if (_connectionState == ConnectionStates.CantReachServer)
{
    <div class="row col-12 d-flex justify-content-center my-2 align-items-center">
        <div class="d-flex align-items-center text-danger">
            <i class="fas fa-exclamation mr-2"></i> Die Verbindung zum Server konnte nicht hergestellt werden.
        </div>
    </div>
}


<MUNityClient.Shared.Bootstrap.Modal Title="Simulation Betreten" @ref="this._passwordModal"
                                        ShowSubmitButton="false">
    <EditForm Model="_joinForm" OnValidSubmit="JoinSimulation">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>Anzeigename</label>
            <InputText @bind-Value="_joinForm.DisplayName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label>Kennung</label>
            <InputText @bind-Value="_joinForm.UserId" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label>Passwort</label>
            <InputText @bind-Value="_joinForm.Password" class="form-control" type="password"></InputText>
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-success" value="Beitreten" />
        </div>
    </EditForm>
</MUNityClient.Shared.Bootstrap.Modal>



