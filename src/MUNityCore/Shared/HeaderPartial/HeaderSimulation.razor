@using Services;
@inject MUNityCore.Services.FrontendSimulationService frontendSimulationService;

<ul class="navbar-nav">
    <li>
        <a @onclick="() => frontendSimulationService.CurrentTab = FrontendSimulationService.SimulationTabs.Overview"
           class="btn @overViewClass">
            Start
        </a>
    </li>

    <li>
        <a @onclick="() => frontendSimulationService.CurrentTab = FrontendSimulationService.SimulationTabs.Agenda"
           class="btn @agendaClass">
            Tagesordnung
        </a>
    </li>

    <li>
        <a @onclick="() => { newVoting = false; frontendSimulationService.CurrentTab = FrontendSimulationService.SimulationTabs.Voting; }"
           class="btn @votingClass">
            Abstimmung
            @if (newVoting)
            {
                <span class="badge badge-danger">neu</span>
            }
        </a>
    </li>

    <li>
        <a @onclick="() => frontendSimulationService.CurrentTab = Services.FrontendSimulationService.SimulationTabs.Resolutions"
           class="btn @resolutionClass">
            Resolutionen
        </a>
    </li>
</ul>

@code {
    private string overViewClass =>
        (frontendSimulationService.CurrentTab == FrontendSimulationService.SimulationTabs.Overview) ? "btn-primary text-white" : "btn-default";

    private string agendaClass =>
        (frontendSimulationService.CurrentTab == FrontendSimulationService.SimulationTabs.Agenda) ? "btn-primary text-white" : "btn-default";

    private string votingClass =>
        (frontendSimulationService.CurrentTab == FrontendSimulationService.SimulationTabs.Voting) ? "btn-primary text-white" : "btn-default";

    private string resolutionClass =>
        (frontendSimulationService.CurrentTab == FrontendSimulationService.SimulationTabs.Resolutions) ? "btn-primary text-white" : "btn-default";

    private bool newVoting = false;

    protected override void OnInitialized()
    {
        frontendSimulationService.VotingCreated += OnVotingCreated;
        base.OnInitialized();
    }

    private void OnVotingCreated(object sender, MUNity.Schema.Simulation.Voting.SimulationVotingDto dto)
    {
        if ( frontendSimulationService.CurrentTab != FrontendSimulationService.SimulationTabs.Voting)
        {
            newVoting = true;
            InvokeAsync(this.StateHasChanged);
        }
    }
}
