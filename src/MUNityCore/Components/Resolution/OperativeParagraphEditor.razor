@inject Services.SqlResolutionService resolutionService;

<div class="panel panel-inverse m-t-0">
    <div class="panel-heading">
        <h4 class="panel-title">§ @Index Operativer Absatz: @previewText</h4>
        <div class="panel-heading-btn">
            <a class="btn btn-xs btn-icon btn-circle btn-default"
               @onclick="() => expanded = !expanded">
                <i class="fa @((expanded) ? "fa-window-minimize" : "fa-expand")"></i>
            </a>
            <div class="btn-group m-l-5">
                <button type="button" class="btn btn-success btn-xs dropdown-toggle" data-toggle="dropdown" aria-expanded="false"> Funktionen<b class="caret"></b></button>
                <div class="dropdown-menu dropdown-menu-right" role="menu" style="">
                    <a href="javascript:;" class="dropdown-item" @onclick="() => expanded = !expanded">
                        @((expanded) ? "Einklappen" : "Ausklappen")
                    </a>
                    <a href="javascript:;" class="dropdown-item">Nach oben schieben</a>
                    <a href="javascript:;" class="dropdown-item">Nach unten schieben</a>
                    <div class="dropdown-divider"></div>
                    <a href="javascript:;" class="dropdown-item text-danger-darker">Löschen</a>
                </div>
            </div>
        </div>
    </div>
    @if (expanded)
    {
        <div class="panel-body">
            <textarea class="form-control" @bind="Paragraph.Text" @onblur="() => SaveParagraphText(Paragraph)" />
        </div>
    }

</div>

@code {
    [Parameter]
    public MUNity.Models.Resolution.OperativeParagraph Paragraph { get; set; }

    [Parameter]
    public string ResolutionId { get; set; }

    [Parameter]
    public string Index { get; set; }

    private bool expanded;

    private string previewText
    {
        get
        {
            if (Paragraph == null) return "";
            return (Paragraph.Text.Length > 30) ? Paragraph.Text.Substring(0, 30) + "..." : Paragraph.Text;
        }
    }

    private void SaveParagraphText(MUNity.Models.Resolution.OperativeParagraph paragraph)
    {
        resolutionService.SetOperativeParagraphText(paragraph.OperativeParagraphId, paragraph.Text);
    }
}
