@using Markdig;
@using MUNity.Extensions.ResolutionExtensions;

@if (ViewModel != null)
{
    <h3>@Resolution.Header.Topic</h3>
    <h5>Einbringer: @Resolution.Header.SubmitterName</h5>
    <h5>Unterstützer: @Resolution.Header.SupporterNames</h5>
    <h5>@Resolution.Header.CommitteeName.ToUpper(),</h5>

    @foreach (var preambleParagraph in Resolution.Preamble.Paragraphs)
    {
        <div style="font-size: 16px">
            <MUNityCore.Components.General.MarkdownView Content="@preambleParagraph.Text" />
        </div>
    }
    <br />
    <br />
    foreach (var operativeParagraph in Resolution.OperativeSection.Paragraphs)
    {
        <ResolutionReaderOperative Paragraph="operativeParagraph" ViewModel="@ViewModel" />
    }
}

@code {
    [Parameter]
    public ViewModel.ResolutionViewModel ViewModel { get; set; }

    private MUNity.Models.Resolution.Resolution Resolution => this.ViewModel.Resolution;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (this.ViewModel != null)
        {
            this.ViewModel.ChangedFromExtern += delegate { InvokeAsync(StateHasChanged); };
        }
    }
}
