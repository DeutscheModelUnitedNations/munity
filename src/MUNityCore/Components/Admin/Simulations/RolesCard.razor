@inject Services.SimulationService simulationService;

@if (Simulation != null)
{
    <div class="panel panel-inverse" data-sortable-id="ui-widget-1">
        <div class="panel-heading">
            <h4 class="panel-title">Rollen (@Simulation.Roles.Count)</h4>
        </div>
        <div class="panel-body">
            <Table>
                <TableHeader>
                    <TableHeaderCell>Id</TableHeaderCell>
                    <TableHeaderCell>Art</TableHeaderCell>
                    <TableHeaderCell>Iso</TableHeaderCell>
                    <TableHeaderCell>Name</TableHeaderCell>
                    <TableHeaderCell TextAlignment="TextAlignment.Center">Löschen</TableHeaderCell>
                </TableHeader>
                <TableBody>
                    @foreach (var role in Simulation.Roles.OrderBy(n => n.RoleType).ThenBy(n => n.Name))
                    {
                        <TableRow>
                            <TableRowCell>@role.SimulationRoleId</TableRowCell>
                            <TableRowCell>
                                @if (role.RoleType == MUNity.Schema.Simulation.RoleTypes.Chairman)
                                {
                                    <span>Vorsitzende*r</span>
                                }
                                else if (role.RoleType == MUNity.Schema.Simulation.RoleTypes.Delegate)
                                {
                                    <span>Delegierte*r</span>
                                }
                                else if (role.RoleType == MUNity.Schema.Simulation.RoleTypes.Moderator)
                                {
                                    <span>Moderator*in</span>
                                }
                                else if (role.RoleType == MUNity.Schema.Simulation.RoleTypes.Ngo)
                                {
                                    <span>Nichtstaatliche*r Akteur*in</span>
                                }
                                else if (role.RoleType == MUNity.Schema.Simulation.RoleTypes.None)
                                {
                                    <span>Keine Rolle</span>
                                }
                                else if (role.RoleType == MUNity.Schema.Simulation.RoleTypes.Spectator)
                                {
                                    <span>Zuschauer*in</span>
                                }
                                else
                                {
                                    @role.RoleType.ToString()
                                }

                            </TableRowCell>
                            <TableRowCell>@role.Iso</TableRowCell>
                            <TableRowCell>@role.Name</TableRowCell>
                            <TableRowCell TextAlignment="TextAlignment.Center">
                            <button class="btn btn-circle btn-sm btn-danger" @onclick="() => RemoveRole(role)">
                                <i class="fa fa-trash"></i>
                                </button>
                            </TableRowCell>
                        </TableRow>
                    }
                </TableBody>
            </Table>

            <div class="form-inline">
                <div class="form-group m-r-10">
                    <select class="form-control" @bind="newRoleType">
                        <option value="@MUNity.Schema.Simulation.RoleTypes.Chairman">Vorsitzende*r</option>
                        <option value="@MUNity.Schema.Simulation.RoleTypes.Delegate">Delegierte*r</option>
                        <option value="@MUNity.Schema.Simulation.RoleTypes.Ngo">Nichtstaatliche*r Akteur*in</option>
                        <option value="@MUNity.Schema.Simulation.RoleTypes.Spectator">Zuschauer</option>
                    </select>
                </div>
                <div class="form-group m-r-10">
                    <input class="form-control" @bind="newRoleIso" placeholder="Iso">
                </div>
                <div class="form-group m-r-10">
                    <input class="form-control" @bind="newRoleName" placeholder="Name">
                </div>
                <button @onclick="() => CreateRole()" class="btn btn-sm btn-success m-r-5">Rolle anlegen</button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public MUNityCore.Models.Simulation.Simulation Simulation { get; set; }

    [Parameter]
    public EventCallback RolesChanged { get; set; }

    private string newRoleName;

    private string newRoleIso;

    private MUNity.Schema.Simulation.RoleTypes newRoleType;

    private void CreateRole()
    {
        if (string.IsNullOrEmpty(newRoleIso))
            newRoleIso = "un";
        if (!string.IsNullOrEmpty(newRoleName))
        {
            simulationService.CreateRole(Simulation.SimulationId, newRoleName, newRoleIso, newRoleType);
        }
        RolesChanged.InvokeAsync();
    }

    private void RemoveRole(MUNityCore.Models.Simulation.SimulationRole role)
    {
        this.simulationService.RemoveRole(role.SimulationRoleId);
        RolesChanged.InvokeAsync();
    }
}
