@using MUNity.Models.Resolution;
@using MUNityClient.Shared.Resa.Reader;
@using MUNity.Extensions.ResolutionExtensions;

@inject MUNityClient.Services.ResolutionService resolutionService;
@if (ViewModel?.Resolution != null)
{

    <!-- Header -->
    <div class="row m-0 p-0">
        <div class="col-12">
            <h3>@ViewModel.Resolution.Header.Topic</h3>
            @if (!string.IsNullOrEmpty(this.ViewModel.Resolution.Header.SubmitterName))
            {
                <h4>EINBRINGER: @ViewModel.Resolution.Header.SubmitterName.ToUpper()</h4>
            }
            else
            {
                <h4>KEIN EINBRINGER</h4>
            }

            @if (!string.IsNullOrEmpty(this.ViewModel.Resolution.Header.CommitteeName))
            {
                <h4>@ViewModel.Resolution.Header.CommitteeName.ToUpper(),</h4>
            }
            else
            {
                <h4>,</h4>
            }

        </div>
    </div>


    <!-- Preamble -->
    <div class="row p-0 m-0 mb-4">
        @foreach (var pp in this.ViewModel.Resolution.Preamble.Paragraphs)
        {
            <ResaReaderPreambleParagraph Paragraph="pp"></ResaReaderPreambleParagraph>
        }
        </div>

    <!-- Operative Section -->
    <div class="row p-0 m-0">
        @foreach (var op in this.ViewModel.Resolution.OperativeSection.Paragraphs)
        {
            if (!op.IsVirtual)
            {
                <ResaReaderOperativeParagraph Paragraph="op"
                    Pathname="@this.ViewModel.Resolution.OperativeSection.GetIndexNameOfOperativeParagraph(op)"
                    DeleteAmendments="this.ViewModel.Resolution.OperativeSection.DeleteAmendments.Where(n => n.TargetSectionId == op.OperativeParagraphId)"
                    ChangeAmendments="this.ViewModel.Resolution.OperativeSection.ChangeAmendments.Where(n => n.TargetSectionId == op.OperativeParagraphId)"
                    MoveAmendments="this.ViewModel.Resolution.OperativeSection.MoveAmendments.Where(n => n.TargetSectionId == op.OperativeParagraphId)">
                </ResaReaderOperativeParagraph>
            }
            else
            {
                @* Dieser Paragraph kann in Zukunft dazu kommen durch einen Änderungsantrag auf verschieben oder einen
                    Änderungsantrag auf Hinzufügen.
                    Um zu ermitteln wie dieser Absatz zustande kommt können diese Funktionen verwendet werden:
                    bool durchVerschieben = Resolution.OperativeSection.MoveAmendments.Any(n => n.NewTargetSectionId ==
                    op.OperativeParagraphId);
                    bool durchHinzufuegen = Resolution.OPerativeSection.AddAmendments.Any(n => n.TargetSectionId ==
                    op.OperativeParagraphId);

                    Um bei einem Verschieben den Ausgangsabsatz zu bekommen:
                    var aenderungsantrag = Resolution.OperativeSection.MoveAmendments.FirstOrDefault(n => n.NewTargetSectionId ==
                    op.OperativeParagraphId);
                    if (aenderungsantrag != null)
                    {
                    var quellParagraph = Resolution.FindOperativeParagraph(aenderungsantrag.TargetSectionId);
                    }
                *@

                if (op.Visible)
                {
                    <div class="col-12">
                        @if (this.ViewModel.Resolution.OperativeSection.MoveAmendments.Any(n => n.NewTargetSectionId == op.OperativeParagraphId))
                        {
                            <div class="card border-dark">
                                <div class="card-body">
                                    <h5><i class="fas fa-arrow-right mr-2"></i>Hierher verschieben</h5>
                                    @op.Text
                                </div>
                            </div>
                        }
                        @if (this.ViewModel.Resolution.OperativeSection.AddAmendments.Any(n => n.TargetSectionId == op.OperativeParagraphId))
                        {
                            <div class="card border-success">
                                <div class="card-body text-success">
                                    <h5><i class="fas fa-plus-square mr-2"></i>Absatz hinzufügen</h5>
                                    <p>@op.Text</p>
                                    <i class="fas fa-user-edit"></i> @(this.ViewModel.Resolution.OperativeSection.AddAmendments.Single(n => n.TargetSectionId ==
                                               op.OperativeParagraphId).SubmitterName)
                                </div>
                            </div>
                        }
                    </div>
                }
            }


        }
    </div>
}
else
{
    <div class="alert alert-danger">Resolution konnte nicht gefunden werden :(</div>
}

@code {

    [Parameter]
    public ViewModel.ResolutionViewModel ViewModel { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (ViewModel != null)
        {
            ViewModel.HeaderChangedFromExtern += delegate { this.StateHasChanged(); };
            ViewModel.PreambleChangedFromExtern += delegate { this.StateHasChanged(); };
        }
    }
}
