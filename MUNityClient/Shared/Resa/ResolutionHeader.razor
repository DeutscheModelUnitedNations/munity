<div class="row py-0 mx-0 my-2 col-12 d-flex justify-content-between">
    <div class="col p-0 mr-2">
        <input type="text" @bind="ResolutionViewModel.Resolution.Header.Topic" @bind:event="oninput" class="form-control" placeholder="Thema">
    </div>
    <div class="col p-0 mx-2">
        <input type="text" @bind="ResolutionViewModel.Resolution.Header.CommitteeName" class="form-control" placeholder="Gremium">
    </div>
    <div class="col p-0 ml-2">
        <input type="text" @bind="ResolutionViewModel.Resolution.Header.SubmitterName" class="form-control" placeholder="Einbringerstaat">
    </div>
</div>
<div class="row py-0 m-0 col-12 justify-content-center">
    <div class="w-100">
        @* //string list *@
        <textarea class="md-textarea form-control" rows="3" placeholder="Unterstützerstaaten"></textarea>
    </div>
</div>
@* TODO: Logik anbinden *@
<div class="row py-0 px-4 my-2 mx-0 col-12 justify-content-center">
    <div class="custom-control custom-checkbox row m-0 py-0 col d-flex align-items-center">
        <input role="button" type="checkbox" class="custom-control-input" id="publicRead">
        <label role="button" class="custom-control-label" for="publicRead">öffentliches Lesen aktiv - ID: 782663</label>
    </div>
    @* Geschlossen, privat, öffentlich *@
    <select role="button" class="browser-default custom-select col-7">
        <option selected> Privat - Niemand sonst kann Änderungsanträge einreichen</option>
        <option>Beschränkt - Team und Komitee kann Änderungsanträge einreichen, müssen bestätigt werden</option>
        <option>Komitee -  Komitee kann Änderungsanträge einreichen</option>
        <option>Beschränkt - Team und Komitee kann Änderungsanträge einreichen</option>
        <option>Nach Bestätigung - Öffentlich, aber muss bestätigt werden</option>
        <option>Öffentlich - Jeder kann Änderungsanträge einreichen</option>
    </select>
</div>

@code {
    [Parameter]
    public MUNityClient.ViewModel.ResolutionViewModel ResolutionViewModel { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (this.ResolutionViewModel != null)
        {
            this.ResolutionViewModel.HeaderChangedFromExtern += delegate { this.StateHasChanged(); };
        }
    }
}
