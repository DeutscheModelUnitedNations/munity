@*
    Ich denke es wäre ganz cool, wenn hier ein Menüband Unten für die Steuerung ist.
    Dieses muss dann recht klein gehalten werden und soll beim auswählen Overlays/Popups generieren in
    welchen die Details sind.

    Das Menüband könnte auch ein wenig Transparent sein und sobald der Benutzer mit der Maus drüber fährt wird die Transparenz komplett
    ausgeblendet.

    Punkte sind:
    - Allgemeine Einstellungen (immer sichtbar)
    - Redeliste (sichtbar für den Vorsitz)
    - Anwesenheit (sichtbar für den Vorsitz)
    - Abstimmung (sichtbar für den Vorsitz)

    zudem QuickControls für die Redeliste:
    - Redner pausieren/fortsetzen bzw. Frage pausieren/fortsetzen
    Ist abhängig vom Context der Redeliste.
*@

@inject Services.SimulationService simulationService;
@inject Services.ListOfSpeakerService listOfSpeakerService;
<!-- Grey with black text -->
<nav class="navbar navbar-expand-sm bg-primary navbar-dark nav-bottom w-100" style="opacity: 0.75;">
    <ul class="navbar-nav">
        <li class="nav-item @((_selectedTab == TabPages.ListOfSpeakers) ? "active" : "")">
            <a class="nav-link" @onclick="() => _selectedTab = (_selectedTab == TabPages.ListOfSpeakers) ? TabPages.None : TabPages.ListOfSpeakers">Redeliste</a>
        </li>
    </ul>
</nav>

@if (_selectedTab == TabPages.ListOfSpeakers)
{
    <div class="card floating-card shadow-2 w-100 p-3">
        @* Von der Sache her könnte an dieser Stelle auch die Beiden Buttons für auf die Redelisten und auf die FuK erscheinen. *@
        @if (SpeakerlistSocket != null)
        {
            @if (SimulationContext?.MyRole != null && SimulationContext.MyRole.RoleType == MUNity.Schema.Simulation.RoleTypes.Chairman)
            {
                <MUNityClient.Pages.LoS.ListOfSpeakerEditor Id="@SpeakerlistSocket.SourceList.ListOfSpeakersId" Socket="@SpeakerlistSocket" IsOnline="@true"></MUNityClient.Pages.LoS.ListOfSpeakerEditor>
            }
            else
            {
                @* TODO: Buttons um auf die Redeliste oder FuK zu kommen an diese Stelle verschieben *@
                <button class="btn btn-info" @onclick="AddMeToListOfSpeakers" disabled="@(SpeakerlistSocket.SourceList.ListClosed)">Auf die Redeliste</button>
                <button class="btn btn-info" @onclick="AddMeToListOfQuestions" disabled="@(SpeakerlistSocket.SourceList.QuestionsClosed)">Auf Fragen und Kurzbemerkungen</button>
            }
        }
        else
        {
            <p>Es wurde keine Redelistenverbindung übergeben. Möglicherweise ist keine Redeliste hinterlegt.</p>
        }
        <span class="close-floating-card badge badge-warning hoverable" @onclick="() => _selectedTab = TabPages.None">Fenster schließen</span>
    </div>
}




<style>
    .header-item {
        transition: .3s;
    }

    .header-item:not(.selected-tab):hover {
        background-color: #dedede;
    }

    .selected-tab {
        background-color: #1266F1;
        color: white;
    }

    .floating-card {
        position: fixed;
        top: auto;
        bottom: 70px;
        left: 10px;
        right: auto;
        z-index: 100;
    }

    .nav-bottom {
        position: fixed;
        top: auto;
        bottom: 0px;
        left: 0px;
        right: auto;
        z-index: 100;
    }

    .close-floating-card {
        position: absolute;
        top: -5px;
        left: auto;
        right: 10px;
        bottom: auto;
        cursor: pointer;
    }
</style>
