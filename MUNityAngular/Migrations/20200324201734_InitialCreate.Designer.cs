// <auto-generated />
using MUNityAngular.DataHandlers.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MUNityAngular.Migrations
{
    [DbContext(typeof(MunityContext))]
    [Migration("20200324201734_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MUNityAngular.DataHandlers.EntityFramework.Models.Committee", b =>
                {
                    b.Property<string>("CommitteeId")
                        .HasColumnType("varchar(95) CHARACTER SET utf8mb4");

                    b.Property<string>("ConferenceId")
                        .HasColumnType("varchar(95) CHARACTER SET utf8mb4");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CommitteeId");

                    b.HasIndex("ConferenceId");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("MUNityAngular.DataHandlers.EntityFramework.Models.Conference", b =>
                {
                    b.Property<string>("ConferenceId")
                        .HasColumnType("varchar(95) CHARACTER SET utf8mb4");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ConferenceId");

                    b.ToTable("Conferences");
                });

            modelBuilder.Entity("MUNityAngular.DataHandlers.EntityFramework.Models.Committee", b =>
                {
                    b.HasOne("MUNityAngular.DataHandlers.EntityFramework.Models.Conference", null)
                        .WithMany("Committees")
                        .HasForeignKey("ConferenceId");
                });
#pragma warning restore 612, 618
        }
    }
}
